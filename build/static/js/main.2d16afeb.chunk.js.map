{"version":3,"sources":["assets/imgs/logo.png","config/sharedConfig.js","ContextState.js","components/header/HeaderComponent.js","components/consumption/ConsumptionTabsComponent.js","config/chartConfig.js","components/charts/DoughnutComponent.js","components/charts/BarComponent.js","components/consumption/ConsumptionComponent.js","components/core/CoreComponent.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","dateRangeOptions","tabLabels","ContextState","createContext","undefined","ContextStateDispatch","ContextStateProvider","children","useState","selectedDateRange","selectedTab","rootState","setRootState","Provider","value","HeaderComponent","useContext","className","map","item","index","type","key","onClick","e","dateRange","ConsumptionTabsComponent","aria-current","COLORS","labels","labelsMonth","Array","from","keys","labelsYear","DOUGHNUT","totalAmount","nightTariff","percentage","lowTariff","solar","randomChartDataValue","Math","floor","random","ListComponent","KwhHelper","DoughnutComponent","chartData","setChartData","useEffect","name","PieChart","width","height","Pie","stroke","data","cx","cy","innerRadius","outerRadius","fill","paddingAngle","dataKey","border","entry","Cell","length","src","logo","alt","getRandom","BarComponent","uv","pv","amt","console","log","BarChart","label","fontSize","animationDuration","barSize","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","vertical","strokeOpacity","XAxis","tickSize","padding","YAxis","Bar","stackId","ConsumptionComponent","CoreComponent","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.2d16afeb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.dfea3bb1.png\";","export const dateRangeOptions = ['Woche', 'Monat', 'Jahr']\nexport const tabLabels = ['Storm', 'Wärne', 'Wasser']","import React, { createContext, useState } from \"react\";\nimport {dateRangeOptions, tabLabels} from \"./config/sharedConfig\";\n\nconst ContextState = createContext(undefined);\nconst ContextStateDispatch = createContext(undefined);\n\nfunction ContextStateProvider({ children }) {\n    const [rootState, setRootState] = useState({\n        selectedDateRange: dateRangeOptions[0],\n        selectedTab: tabLabels[0]\n    });\n\n    return (\n        <ContextState.Provider value={rootState}>\n            <ContextStateDispatch.Provider value={setRootState}>\n                {children}\n            </ContextStateDispatch.Provider>\n        </ContextState.Provider>\n    );\n}\n\nexport { ContextStateProvider, ContextState, ContextStateDispatch };\n","import React from 'react';\nimport DatePickerComponent from \"./DatePickerComponent\";\nimport {useContext} from \"react\";\nimport {ContextState, ContextStateDispatch} from \"../../ContextState\";\nimport {dateRangeOptions} from \"../../config/sharedConfig\";\n\nconst HeaderComponent = () => {\n    const rootState = useContext(ContextState);\n    const setRootState = useContext(ContextStateDispatch)\n\n    const setSelectedDateRange = dateRange => setRootState({...rootState, selectedDateRange: dateRange})\n    const selectDateRangeView = () => dateRangeOptions.map((item, index) => <button type=\"button\" key={index} className={`btn ${rootState.selectedDateRange === item ? 'btn-secondary' : ''}`} onClick={e => setSelectedDateRange(item)}>{item}</button>)\n\n    return (\n        <>\n            <div className=\"row ckw-header-wrapper\">\n                <div className=\"col-md-6\">\n                    <h4 className=\"ckw-header-title\">Überlich Verbrauch</h4>\n                </div>\n                <div className=\"col-md-6 ckw-header-buttons\">\n                    {selectDateRangeView()}\n                </div>\n                {/*<div className=\"col-md-3 offset-md-9 mt-2\">*/}\n                {/*    <DatePickerComponent/>*/}\n                {/*</div>*/}\n            </div>\n        </>\n    )\n}\n\nexport default HeaderComponent;","import React from 'react';\nimport {tabLabels} from \"../../config/sharedConfig\";\nimport {useContext} from \"react\";\nimport {ContextState, ContextStateDispatch} from \"../../ContextState\";\n\nconst ConsumptionTabsComponent = () => {\n    const rootState = useContext(ContextState)\n    const setRootState = useContext(ContextStateDispatch)\n\n    const tabsView = () => tabLabels.map((item, index) => <li key={index} className=\"nav-item\" onClick={e => setRootState({...rootState, selectedTab: item})}>\n        <p className={`nav-link ${rootState.selectedTab === item ? 'active' : ''}`} aria-current=\"page\">{item}</p>\n\n    </li>)\n\n    return (\n        <>\n            <ul className=\"nav nav-tabs ckw-consumption-tabs-wrapper\">\n                {tabsView()}\n            </ul>\n        </>\n    )\n}\n\nexport default ConsumptionTabsComponent;","import {tabLabels} from \"./sharedConfig\";\n\nexport const COLORS = ['rgb(116, 214, 229)', 'rgb(38, 163, 184)', 'rgb(22, 102, 119)']\nexport const labels = ['Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa', 'So'];\nexport const labelsMonth = Array.from(Array(30).keys()).map(item => item + 1)\nexport const labelsYear = ['Jan', 'Feb', 'Mär', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez']\nexport const doughnutChartData = {\n    labels: [],\n    datasets: [\n        {\n            label: '# of Votes',\n            data: [2, 9, 3],\n            cutout: 47,\n            backgroundColor: [\n                COLORS[0],\n                COLORS[1],\n                COLORS[2],\n            ],\n            borderColor: [\n                COLORS[0],\n                COLORS[1],\n                COLORS[2],\n            ],\n            borderWidth: 1,\n        },\n    ],\n};\n\n/*MOCK DATA for charts*/\nexport const DOUGHNUT = {\n    [tabLabels[0]]: {\n        totalAmount: 654.76,\n        nightTariff: {\n            value: 381.12,\n            percentage: 72\n        },\n        lowTariff: {\n            value: 141.51,\n            percentage: 14\n        },\n        solar: {\n            value: 132.13,\n            percentage: 10\n        }\n    },\n    [tabLabels[1]]: {\n        totalAmount: 321.76,\n        nightTariff: {\n            value: 243.54,\n            percentage: 67\n        },\n        lowTariff: {\n            value: 65.23,\n            percentage: 28\n        },\n        solar: {\n            value: 43.18,\n            percentage: 17\n        }\n    },\n    [tabLabels[2]]: {\n        totalAmount: 139.33,\n        nightTariff: {\n            value: 101.44,\n            percentage: 81\n        },\n        lowTariff: {\n            value: 21.19,\n            percentage: 13\n        },\n        solar: {\n            value: 12.52,\n            percentage: 6\n        }\n    },\n}","import React from 'react';\nimport {COLORS, DOUGHNUT, doughnutChartData} from \"../../config/chartConfig\";\nimport logo from '../../assets/imgs/logo.png'\nimport {ContextState} from \"../../ContextState\";\nimport {useEffect, useContext, useState} from \"react\";\nimport {tabLabels} from \"../../config/sharedConfig\";\nimport {PieChart, Pie, Cell} from 'recharts';\n\nconst randomChartDataValue = () => Math.floor(Math.random() * (250 - 100 + 1) + 100);\n\nconst DoughnutComponent = () => {\n    const rootState = useContext(ContextState)\n    const [chartData, setChartData] = useState(null)\n\n    useEffect(() => {\n        setChartData([{name: 'Group A', value: randomChartDataValue()},\n            {name: 'Group B', value: randomChartDataValue()},\n            {name: 'Group C', value: rootState.selectedTab === tabLabels[2] ? 0 : randomChartDataValue()}\n        ])\n    }, [rootState.selectedTab])\n\n    return (\n        <>\n            <div className=\"ckw-doughnut-wrapper\">\n                <div className=\"ckw-doughnut\">\n                    <div className=\"ckw-doughnut-center-label\">\n                        {DOUGHNUT[rootState.selectedTab].totalAmount}\n                        <span><KwhHelper selectedTab={rootState.selectedTab}/></span>\n                    </div>\n                    {chartData && <PieChart width={150} height={150}>\n                        <Pie\n                            stroke={0}\n                            data={chartData}\n                            cx={70}\n                            cy={80}\n                            innerRadius={40}\n                            outerRadius={55}\n                            fill=\"#8884d8\"\n                            paddingAngle={3}\n                            dataKey=\"value\"\n                            border={0}\n                        >\n                            {chartData.map((entry, index) => (\n                                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]}/>\n                            ))}\n                        </Pie>\n                    </PieChart>}\n                </div>\n                <ol className=\"list-group ckw-doughnut-list\">\n                    <ListComponent selectedTab={rootState.selectedTab}/>\n                </ol>\n                <div className=\"ckw-logo\">\n                    <img src={logo} alt=\"Ckw Logo\"/>\n                </div>\n            </div>\n\n        </>\n    )\n}\n\nconst ListComponent = ({selectedTab}) => {\n    const firstListItemView = () => {\n        return selectedTab === tabLabels[0] ?\n            'Netzbezug - Hochf' :\n            selectedTab === tabLabels[1] ?\n                'Raumheizung' : 'Kaltwasser'\n    }\n    const secondListItemView = () => {\n        return selectedTab === tabLabels[0] ?\n            'Netzbezug - Niedertarif' :\n            'Warmwasser'\n    }\n    const thirdListItemView = () => {\n        return selectedTab === tabLabels[0] ?\n            'Solarstorm' :\n            'Kälte'\n    }\n    return (\n        <>\n            <li className=\"list-group-item f\">\n                {firstListItemView()} ({DOUGHNUT[selectedTab].nightTariff.percentage}%)\n                <span>{DOUGHNUT[selectedTab].nightTariff.value} <KwhHelper selectedTab={selectedTab}/></span>\n            </li>\n            <li className=\"list-group-item s\">\n                {secondListItemView()} ({DOUGHNUT[selectedTab].lowTariff.percentage}%)\n                <span>{DOUGHNUT[selectedTab].lowTariff.value} <KwhHelper selectedTab={selectedTab}/></span>\n            </li>\n            {selectedTab !== tabLabels[2] && <li className=\"list-group-item t\">\n                {thirdListItemView()} ({DOUGHNUT[selectedTab].solar.percentage}%)\n                <span>{DOUGHNUT[selectedTab].solar.value} <KwhHelper selectedTab={selectedTab}/> </span>\n            </li>}\n        </>\n    )\n}\n\nexport const KwhHelper = ({selectedTab}) => selectedTab === tabLabels[2] ? <>m<sup>3</sup></> : 'kWh'\nexport default DoughnutComponent","import React, {useEffect, useContext, useState} from 'react';\nimport {COLORS, labels, labelsMonth, labelsYear} from \"../../config/chartConfig\";\nimport {ContextState} from \"../../ContextState\";\nimport {dateRangeOptions, tabLabels} from \"../../config/sharedConfig\";\nimport {KwhHelper} from \"./DoughnutComponent\";\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, } from 'recharts';\n\nconst getRandom = () => Math.floor(Math.random() * (100 - 0 + 1) + 0)\n\nconst BarComponent = () => {\n    const rootState = useContext(ContextState)\n    const [chartData, setChartData] = useState()\n\n    useEffect(() => {\n        if (rootState.selectedDateRange === dateRangeOptions[0])\n            setChartData(labels.map((item, index) => {\n                return {\n                    name: item,\n                    uv: getRandom(),\n                    pv: getRandom(),\n                    amt: getRandom()\n                }\n            }))\n        if (rootState.selectedDateRange === dateRangeOptions[1])\n            setChartData(labelsMonth.map((item, index) => {\n                return {\n                    name: item,\n                    uv: getRandom(),\n                    pv: getRandom(),\n                    amt: getRandom()\n                }\n            }))\n        if (rootState.selectedDateRange === dateRangeOptions[2])\n            setChartData(labelsYear.map((item, index) => {\n                return {\n                    name: item,\n                    uv: getRandom(),\n                    pv: getRandom(),\n                    amt: getRandom()\n                }\n            }))\n        console.log(chartData);\n    }, [rootState.selectedDateRange, rootState.selectedTab])\n\n    return (\n        <>\n            <div className=\"ckw-bar-wrapper\">\n                <p>\n                    <KwhHelper selectedTab={rootState.selectedTab}/>\n                </p>\n                <BarChart\n                    width={630}\n                    height={330}\n                    label={{ fill: 'red', fontSize: 20 }}\n                    animationDuration={2500}\n                    data={chartData}\n                    barSize={rootState.selectedDateRange === dateRangeOptions[1] ? 5 : 10}\n                    margin={{\n                        top: 20,\n                        right: 0,\n                        left: 0,\n                        bottom: 5,\n                    }}\n                >\n                    <CartesianGrid strokeDasharray=\"0\" vertical={false} strokeOpacity={0.5}/>\n                    <XAxis dataKey={\"name\"} stroke={\"white\"} tickSize={3} fontSize={14} padding={{top: 10}}/>\n                    <YAxis stroke={\"white\"} fontSize={14}/>\n                    <Bar dataKey=\"pv\" stackId=\"a\" fill={COLORS[0]}/>\n                    <Bar dataKey=\"uv\" stackId=\"a\" fill={COLORS[1]}/>\n                    {rootState.selectedTab !== tabLabels[2] ? <Bar dataKey=\"amt\" stackId=\"a\" fill={COLORS[2]}/> : null}\n                </BarChart>\n            </div>\n        </>\n    )\n}\n\nexport default BarComponent","import React from 'react';\nimport ConsumptionTabsComponent from \"./ConsumptionTabsComponent\";\nimport DoughnutComponent from \"../charts/DoughnutComponent\";\nimport BarComponent from \"../charts/BarComponent\";\n\nconst ConsumptionComponent = () => {\n    return (\n        <>\n            <div className=\"row ckw-consumption-wrapper\">\n                <div className=\"col-md-12\">\n                    <ConsumptionTabsComponent/>\n                </div>\n                <div className=\"col-md-4\">\n                    <DoughnutComponent/>\n                </div>\n                <div className=\"col-md-8\">\n                    <BarComponent/>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default ConsumptionComponent;","import React from 'react';\nimport HeaderComponent from \"../header/HeaderComponent\";\nimport ConsumptionComponent from \"../consumption/ConsumptionComponent\";\n\nconst CoreComponent = () => {\n\n    return (\n        <>\n            <div className=\"ckw-core-wrapper container-fluid\">\n                <HeaderComponent />\n                <ConsumptionComponent />\n            </div>\n        </>\n    )\n}\n\nexport default CoreComponent;","import React from 'react';\nimport './assets/scss/base.scss'\nimport CoreComponent from \"./components/core/CoreComponent\";\nimport {ContextStateProvider} from \"./ContextState\";\n\n\nfunction App() {\n  return (\n    <div className=\"App app-wrapper\">\n        <ContextStateProvider>\n            <CoreComponent/>\n        </ContextStateProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}