{"version":3,"sources":["assets/imgs/logo.png","config/sharedConfig.js","ContextState.js","components/header/HeaderComponent.js","components/consumption/ConsumptionTabsComponent.js","config/chartConfig.js","components/charts/DoughnutComponent.js","components/charts/BarComponent.js","components/consumption/ConsumptionComponent.js","components/core/CoreComponent.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","dateRangeOptions","tabLabels","ContextState","createContext","undefined","ContextStateDispatch","ContextStateProvider","children","useState","selectedDateRange","selectedTab","rootState","setRootState","Provider","value","HeaderComponent","useContext","className","map","item","index","type","key","onClick","e","dateRange","ConsumptionTabsComponent","aria-current","COLORS","DOUGHNUT","Array","from","keys","totalAmount","nightTariff","percentage","lowTariff","solar","randomChartDataValue","Math","floor","random","ListComponent","KwhHelper","DoughnutComponent","chartData","setChartData","useEffect","name","PieChart","width","height","Pie","data","cx","cy","innerRadius","outerRadius","fill","paddingAngle","dataKey","border","entry","Cell","length","src","logo","alt","dataBar","uv","pv","amt","BarComponent","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","YAxis","Tooltip","Legend","Bar","stackId","ConsumptionComponent","CoreComponent","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.cfefbbb4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.dfea3bb1.png\";","export const dateRangeOptions = ['Woche', 'Monat', 'Jahr']\nexport const tabLabels = ['Storm', 'Wärne', 'Wasser']","import React, { createContext, useState } from \"react\";\nimport {dateRangeOptions, tabLabels} from \"./config/sharedConfig\";\n\nconst ContextState = createContext(undefined);\nconst ContextStateDispatch = createContext(undefined);\n\nfunction ContextStateProvider({ children }) {\n    const [rootState, setRootState] = useState({\n        selectedDateRange: dateRangeOptions[0],\n        selectedTab: tabLabels[0]\n    });\n\n    return (\n        <ContextState.Provider value={rootState}>\n            <ContextStateDispatch.Provider value={setRootState}>\n                {children}\n            </ContextStateDispatch.Provider>\n        </ContextState.Provider>\n    );\n}\n\nexport { ContextStateProvider, ContextState, ContextStateDispatch };\n","import React from 'react';\nimport DatePickerComponent from \"./DatePickerComponent\";\nimport {useContext} from \"react\";\nimport {ContextState, ContextStateDispatch} from \"../../ContextState\";\nimport {dateRangeOptions} from \"../../config/sharedConfig\";\n\nconst HeaderComponent = () => {\n    const rootState = useContext(ContextState);\n    const setRootState = useContext(ContextStateDispatch)\n\n    const setSelectedDateRange = dateRange => setRootState({...rootState, selectedDateRange: dateRange})\n    const selectDateRangeView = () => dateRangeOptions.map((item, index) => <button type=\"button\" key={index} className={`btn ${rootState.selectedDateRange === item ? 'btn-secondary' : ''}`} onClick={e => setSelectedDateRange(item)}>{item}</button>)\n\n    return (\n        <>\n            <div className=\"row ckw-header-wrapper\">\n                <div className=\"col-md-6\">\n                    <h4 className=\"ckw-header-title\">Überlich Verbrauch</h4>\n                </div>\n                <div className=\"col-md-6 ckw-header-buttons\">\n                    {selectDateRangeView()}\n                </div>\n                {/*<div className=\"col-md-3 offset-md-9 mt-2\">*/}\n                {/*    <DatePickerComponent/>*/}\n                {/*</div>*/}\n            </div>\n        </>\n    )\n}\n\nexport default HeaderComponent;","import React from 'react';\nimport {tabLabels} from \"../../config/sharedConfig\";\nimport {useContext} from \"react\";\nimport {ContextState, ContextStateDispatch} from \"../../ContextState\";\n\nconst ConsumptionTabsComponent = () => {\n    const rootState = useContext(ContextState)\n    const setRootState = useContext(ContextStateDispatch)\n\n    const tabsView = () => tabLabels.map((item, index) => <li key={index} className=\"nav-item\" onClick={e => setRootState({...rootState, selectedTab: item})}>\n        <p className={`nav-link ${rootState.selectedTab === item ? 'active' : ''}`} aria-current=\"page\">{item}</p>\n\n    </li>)\n\n    return (\n        <>\n            <ul className=\"nav nav-tabs ckw-consumption-tabs-wrapper\">\n                {tabsView()}\n            </ul>\n        </>\n    )\n}\n\nexport default ConsumptionTabsComponent;","import {tabLabels} from \"./sharedConfig\";\n\nexport const COLORS = ['rgb(116, 214, 229)', 'rgb(38, 163, 184)', 'rgb(22, 102, 119)']\nexport const labels = ['Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa', 'So'];\nexport const labelsMonth = Array.from(Array(30).keys()).map(item => item + 1)\nexport const labelsYear = ['Jan', 'Feb', 'Mär', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez']\nexport const doughnutChartData = {\n    labels: [],\n    datasets: [\n        {\n            label: '# of Votes',\n            data: [2, 9, 3],\n            cutout: 47,\n            backgroundColor: [\n                COLORS[0],\n                COLORS[1],\n                COLORS[2],\n            ],\n            borderColor: [\n                COLORS[0],\n                COLORS[1],\n                COLORS[2],\n            ],\n            borderWidth: 1,\n        },\n    ],\n};\n\n/*MOCK DATA for charts*/\nexport const DOUGHNUT = {\n    [tabLabels[0]]: {\n        totalAmount: 654.76,\n        nightTariff: {\n            value: 381.12,\n            percentage: 72\n        },\n        lowTariff: {\n            value: 141.51,\n            percentage: 14\n        },\n        solar: {\n            value: 132.13,\n            percentage: 10\n        }\n    },\n    [tabLabels[1]]: {\n        totalAmount: 321.76,\n        nightTariff: {\n            value: 243.54,\n            percentage: 67\n        },\n        lowTariff: {\n            value: 65.23,\n            percentage: 28\n        },\n        solar: {\n            value: 43.18,\n            percentage: 17\n        }\n    },\n    [tabLabels[2]]: {\n        totalAmount: 139.33,\n        nightTariff: {\n            value: 101.44,\n            percentage: 81\n        },\n        lowTariff: {\n            value: 21.19,\n            percentage: 13\n        },\n        solar: {\n            value: 12.52,\n            percentage: 6\n        }\n    },\n}","import React from 'react';\nimport {Doughnut} from \"react-chartjs-2\";\nimport {ArcElement, Chart as ChartJS, Legend, Tooltip} from \"chart.js\";\nimport {COLORS, DOUGHNUT, doughnutChartData} from \"../../config/chartConfig\";\nimport logo from '../../assets/imgs/logo.png'\nimport {ContextState, ContextStateDispatch} from \"../../ContextState\";\nimport {useEffect, useContext, useState} from \"react\";\nimport {tabLabels} from \"../../config/sharedConfig\";\nimport {LineChart, Line, PieChart,Pie, Cell} from 'recharts';\n// const data = [{name: 'Page A', uv: 400, pv: 2400, amt: 2400}, {name: 'Page b', uv: 322, pv: 1232, amt: 3212}];\n\nconst randomChartDataValue = () =>  Math.floor(Math.random() * (250 - 100 + 1) + 100);\n\nconst DoughnutComponent = () => {\n    const rootState = useContext(ContextState)\n    const [chartData, setChartData] = useState(null)\n\n    useEffect(() => {\n        setChartData([    { name: 'Group A', value: randomChartDataValue() },\n            { name: 'Group B', value: randomChartDataValue() },\n            { name: 'Group C', value: rootState.selectedTab === tabLabels[2] ? 0 : randomChartDataValue() }\n        ])\n    }, [rootState.selectedTab])\n\n    return (\n        <>\n            <div className=\"ckw-doughnut-wrapper\">\n                <div className=\"ckw-doughnut\">\n                    <div className=\"ckw-doughnut-center-label\">\n                        {DOUGHNUT[rootState.selectedTab].totalAmount}\n                        <span><KwhHelper selectedTab={rootState.selectedTab} /></span>\n                    </div>\n                    {chartData && <PieChart width={150} height={150} >\n                        <Pie\n                            data={chartData}\n                            cx={70}\n                            cy={80}\n                            innerRadius={40}\n                            outerRadius={60}\n                            fill=\"#8884d8\"\n                            paddingAngle={3}\n                            dataKey=\"value\"\n                            border={0}\n                        >\n                            {chartData.map((entry, index) => (\n                                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                            ))}\n                        </Pie>\n                    </PieChart> }\n                </div>\n                <ol className=\"list-group ckw-doughnut-list\">\n                    <ListComponent selectedTab={rootState.selectedTab} />\n                </ol>\n                <div className=\"ckw-logo\">\n                    <img src={logo} alt=\"Ckw Logo\"/>\n                </div>\n            </div>\n\n        </>\n    )\n}\n\nconst ListComponent = ({selectedTab}) => {\n    const firstListItemView = () => {\n        return selectedTab === tabLabels[0] ?\n            'Netzbezug - Hochf' :\n            selectedTab === tabLabels[1] ?\n                'Raumheizung' : 'Kaltwasser'\n    }\n    const secondListItemView = () => {\n        return selectedTab === tabLabels[0] ?\n            'Netzbezug - Niedertarif' :\n            'Warmwasser'\n    }\n    const thirdListItemView = () => {\n        return selectedTab === tabLabels[0] ?\n            'Solarstorm' :\n            'Kälte'\n    }\n    return (\n        <>\n            <li className=\"list-group-item f\">\n                {firstListItemView()} ({DOUGHNUT[selectedTab].nightTariff.percentage}%)\n                <span>{DOUGHNUT[selectedTab].nightTariff.value} <KwhHelper selectedTab={selectedTab} /></span>\n            </li>\n            <li className=\"list-group-item s\">\n                {secondListItemView()} ({DOUGHNUT[selectedTab].lowTariff.percentage}%)\n                <span>{DOUGHNUT[selectedTab].lowTariff.value} <KwhHelper selectedTab={selectedTab} /></span>\n            </li>\n            {selectedTab !== tabLabels[2] && <li className=\"list-group-item t\">\n                {thirdListItemView()} ({DOUGHNUT[selectedTab].solar.percentage}%)\n                <span>{DOUGHNUT[selectedTab].solar.value} <KwhHelper selectedTab={selectedTab} /> </span>\n            </li>}\n        </>\n    )\n}\n\nexport const KwhHelper = ({selectedTab}) => selectedTab === tabLabels[2] ? <>m<sup>3</sup></> : 'kWh'\nexport default DoughnutComponent","import React, {useEffect, useContext, useState} from 'react';\n// import {\n//     Chart as ChartJS,\n//     CategoryScale,\n//     LinearScale,\n//     BarElement,\n//     Title,\n//     Tooltip,\n//     Legend,\n// } from 'chart.js';\n// import {Bar} from 'react-chartjs-2';\nimport {COLORS, labels, labelsMonth, labelsYear} from \"../../config/chartConfig\";\nimport {ContextState} from \"../../ContextState\";\nimport {dateRangeOptions, tabLabels} from \"../../config/sharedConfig\";\nimport {KwhHelper} from \"./DoughnutComponent\";\n\n// ChartJS.register(\n//     CategoryScale,\n//     LinearScale,\n//     BarElement,\n//     Title,\n//     Tooltip,\n//     Legend\n// );\n\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nconst dataBar = [\n    {\n        name: 'Page A',\n        uv: 4000,\n        pv: 2400,\n        amt: 2400,\n    },\n    {\n        name: 'Page B',\n        uv: 3000,\n        pv: 1398,\n        amt: 2210,\n    },\n    {\n        name: 'Page C',\n        uv: 2000,\n        pv: 9800,\n        amt: 2290,\n    },\n    {\n        name: 'Page D',\n        uv: 2780,\n        pv: 3908,\n        amt: 2000,\n    },\n    {\n        name: 'Page E',\n        uv: 1890,\n        pv: 4800,\n        amt: 2181,\n    },\n    {\n        name: 'Page F',\n        uv: 2390,\n        pv: 3800,\n        amt: 2500,\n    },\n    {\n        name: 'Page G',\n        uv: 3490,\n        pv: 4300,\n        amt: 2100,\n    },\n];\n\nconst options = {\n    plugins: {\n        legend: {\n            display: false,\n        },\n    },\n    responsive: true,\n    scales: {\n        x: {\n            stacked: true,\n            ticks: {color: \"white\"}\n        },\n        y: {\n            stacked: true,\n            ticks: {color: \"white\"},\n            grid: {color: 'rgba(137,137,137,0.5)'}\n        },\n\n    },\n};\n\nconst data = {\n    labels,\n    datasets: [\n        {\n            label: 'Dataset 1',\n            data: [10, 13, 9, 4, 7, 11, 8],\n            backgroundColor: COLORS[0],\n            barThickness: 8\n        },\n        {\n            label: 'Dataset 2',\n            data: [15, 9, 2, 11, 7, 4, 9],\n            backgroundColor: COLORS[1],\n            barThickness: 8\n        },\n        {\n            label: 'Dataset 3',\n            data: [2, 13, 3, 6, 3, 8, 5],\n            backgroundColor: COLORS[2],\n            barThickness: 8\n        },\n    ],\n};\n\nconst BarComponent = () => {\n    const rootState = useContext(ContextState)\n    const [chartData, setChartData] = useState()\n\n\n    return (\n        <>\n            <div className=\"ckw-bar-wrapper\">\n                <p>\n                <KwhHelper selectedTab={rootState.selectedTab}/>\n                </p>\n                    <BarChart\n                        width={600}\n                        height={300}\n                        data={dataBar}\n                        margin={{\n                            top: 20,\n                            right: 30,\n                            left: 20,\n                            bottom: 5,\n                        }}\n                    >\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"name\" />\n                        <YAxis />\n                        <Tooltip />\n                        <Legend />\n                        <Bar dataKey=\"pv\" stackId=\"a\" fill=\"#8884d8\" />\n                        <Bar dataKey=\"amt\" stackId=\"a\" fill=\"#82ca9d\" />\n                        {/*<Bar dataKey=\"uv\" fill=\"#ffc658\" />*/}\n                    </BarChart>\n            </div>\n\n        </>\n    )\n}\n\nexport default BarComponent","import React from 'react';\nimport ConsumptionTabsComponent from \"./ConsumptionTabsComponent\";\nimport DoughnutComponent from \"../charts/DoughnutComponent\";\nimport BarComponent from \"../charts/BarComponent\";\n\nconst ConsumptionComponent = () => {\n    return (\n        <>\n            <div className=\"row ckw-consumption-wrapper\">\n                <div className=\"col-md-12\">\n                    <ConsumptionTabsComponent/>\n                </div>\n                <div className=\"col-md-4\">\n                    <DoughnutComponent/>\n                </div>\n                <div className=\"col-md-8\">\n                    <BarComponent/>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default ConsumptionComponent;","import React from 'react';\nimport HeaderComponent from \"../header/HeaderComponent\";\nimport ConsumptionComponent from \"../consumption/ConsumptionComponent\";\n\nconst CoreComponent = () => {\n\n    return (\n        <>\n            <div className=\"ckw-core-wrapper container-fluid\">\n                <HeaderComponent />\n                <ConsumptionComponent />\n            </div>\n        </>\n    )\n}\n\nexport default CoreComponent;","import React from 'react';\nimport './assets/scss/base.scss'\nimport CoreComponent from \"./components/core/CoreComponent\";\nimport {ContextStateProvider} from \"./ContextState\";\n\n\nfunction App() {\n  return (\n    <div className=\"App app-wrapper\">\n        <ContextStateProvider>\n            <CoreComponent/>\n        </ContextStateProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}